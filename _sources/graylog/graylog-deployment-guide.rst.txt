.. Graylog Deployment Guide

.. |br| raw:: html

   <br />

########################
Graylog Deployment Guide
########################

.. toctree::
   :maxdepth: 2
   :caption: Contents:

The following instructions are for deploying Graylog.


*************
Prerequisites
*************

* :doc:`graylog-os-installation-guide`
* :doc:`../idm/idm-client-deployment-guide`
* :doc:`../nfs/nfs-client-deployment-guide`


*********************
Follow-on Deployments
*********************

The following guides can be applied after the deployment of their associated nodes.

* :doc:`../graylog/rsyslog-deployment-guide`
* :doc:`../influxdb/telegraf-deployment-guide`


**********
References
**********

..

  These instructions were written for Graylog ``4.3.x``

..

  Instructions are based on the following documentation: |br|
  - https://docs.graylog.org/docs/operating-system-packages |br|
  - https://docs.graylog.org/docs/centos |br|
  - https://docs.graylog.org/docs/https |br|
  - https://docs.graylog.org/docs/syslog


***************
Post Deployment
***************

..

  The Graylog can be accessed at the following URL: |br|
  https://graylog.engwsc.example.com:9000

  Username: ``admin`` |br|
  Password: ``password_secret`` (from step 16)

******************
Deployment Scripts
******************

.. note::

  An example bash script of the instructions has been provided: |br|
  :download:`../_static/graylog/deploy-graylog.sh`


****************
Deployment Steps
****************

.. note::

  Instructions assume execution using the ``root`` account.

1. Connect the system to the NFS Server:

  See Guide: :doc:`../nfs/nfs-client-deployment-guide`

2. Connect the system to the IdM Server:

  See Guide: :doc:`../idm/idm-client-deployment-guide`

3. Install Dependencies:

  .. code-block:: bash

    dnf -y install epel-release

    dnf -y distro-sync
    dnf -y install pwgen java-1.8.0-openjdk-headless \
        checkpolicy policycoreutils selinux-policy-devel


MongoDB
~~~~~~~

4. Add the MongoDB Yum Repository:

  .. code-block:: bash

    cat > /etc/yum.repos.d/mongodb-org-6.0.repo <<EOF
    [mongodb-org-6.0]
    name=MongoDB Repository
    baseurl=https://repo.mongodb.org/yum/redhat/\$releasever/mongodb-org/6.0/x86_64/
    gpgcheck=1
    enabled=1
    gpgkey=https://www.mongodb.org/static/pgp/server-6.0.asc
    EOF

5. Install MongoDB:

  .. code-block:: bash

    dnf -y distro-sync
    dnf -y install mongodb-org

6. Add SELinux policy to permit access to cgroup:

  .. code-block:: bash

    mkdir -p /etc/mongod/selinux/

    cat > /etc/mongod/selinux/mongodb_cgroup_memory.te <<EOF
    module mongodb_cgroup_memory 1.0;
    require {
          type cgroup_t;
          type mongod_t;
          class dir search;
          class file { getattr open read };
    }
    #============= mongod_t ==============
    allow mongod_t cgroup_t:dir search;
    allow mongod_t cgroup_t:file { getattr open read };
    EOF

    checkmodule -M -m \
        -o /etc/mongod/selinux/mongodb_cgroup_memory.mod \
        /etc/mongod/selinux/mongodb_cgroup_memory.te

    semodule_package \
        -o /etc/mongod/selinux/mongodb_cgroup_memory.pp \
        -m /etc/mongod/selinux/mongodb_cgroup_memory.mod

    semodule -i /etc/mongod/selinux/mongodb_cgroup_memory.pp

7. Add SELinux policy to permit access to netstat:

  .. code-block:: bash

    cat > /etc/mongod/selinux/mongodb_proc_net.te <<EOF
    module mongodb_proc_net 1.0;
    require {
        type proc_net_t;
        type mongod_t;
        class file { open read };
    }
    #============= mongod_t ==============
    allow mongod_t proc_net_t:file { open read };
    EOF

    checkmodule -M -m \
        -o /etc/mongod/selinux/mongodb_proc_net.mod \
        /etc/mongod/selinux/mongodb_proc_net.te

    semodule_package \
        -o /etc/mongod/selinux/mongodb_proc_net.pp \
        -m /etc/mongod/selinux/mongodb_proc_net.mod

    semodule -i /etc/mongod/selinux/mongodb_proc_net.pp

8. Start MongoDB:

  .. code-block:: bash

    systemctl daemon-reload
    systemctl enable --now mongod


ElasticSearch
~~~~~~~~~~~~~

9. Add the ElasticSearch Yum Repository:

  .. code-block:: bash

    rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch

    cat > /etc/yum.repos.d/elasticsearch.repo <<EOF
    [elasticsearch-7.x]
    name=Elasticsearch repository for 7.x packages
    baseurl=https://artifacts.elastic.co/packages/oss-7.x/yum
    gpgcheck=1
    gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
    enabled=1
    autorefresh=1
    type=rpm-md
    EOF

10. Install ElasticSearch:

  .. code-block:: bash

    dnf -y distro-sync
    dnf -y install elasticsearch-oss

11. Configure ElasticSearch for Graylog:

  .. code-block:: bash

    tee -a /etc/elasticsearch/elasticsearch.yml > /dev/null <<EOT
    cluster.name: graylog
    action.auto_create_index: false
    EOT

12. Start ElasticSearch:

  .. code-block:: bash

    systemctl daemon-reload
    systemctl enable --now elasticsearch


Graylog
~~~~~~~

13. Install Graylog:

  .. code-block:: bash

    rpm -Uvh https://packages.graylog2.org/repo/packages/graylog-4.3-repository_latest.rpm

    dnf -y distro-sync
    dnf -y install graylog-server

14. Create Self-Signed SSL Certificate:

  .. important::

    Replace values with the specifics of your network.

  .. code-block:: bash

    # Create directory structure
    mkdir -p  /etc/graylog/ssl/
    chmod 755 /etc/graylog/ssl

    # Create OpenSSL configuration file
    cat > /etc/graylog/ssl/graylog.engwsc.example.com.cnf <<EOF
    [req]
    distinguished_name = req_distinguished_name
    x509_extensions = v3_req
    prompt = no

    # Details about the issuer of the certificate
    [req_distinguished_name]
    C = US
    ST = New York
    L = New York
    O = engwsc
    CN = graylog.engwsc.example.com

    [v3_req]
    keyUsage = nonRepudiation, digitalSignature, keyEncipherment
    extendedKeyUsage = serverAuth
    subjectAltName = @alt_names

    # IP addresses and DNS names the certificate should include
    # Use IP.### for IP addresses and DNS.### for DNS names,
    # with "###" being a consecutive number.
    [alt_names]
    IP.1 = 192.168.1.83
    DNS.1 = graylog.engwsc.example.com
    EOF

    # Create certificate
    openssl req -x509 -days 365 -nodes -newkey rsa:4096 \
        -config /etc/graylog/ssl/graylog.engwsc.example.com.cnf \
        -keyout /etc/graylog/ssl/graylog.engwsc.example.com.key \
        -out    /etc/graylog/ssl/graylog.engwsc.example.com.crt

    # Set permissions
    chown graylog:graylog /etc/graylog/ssl/graylog.engwsc.example.com.key
    chown graylog:graylog /etc/graylog/ssl/graylog.engwsc.example.com.crt
    chmod 600 /etc/graylog/ssl/graylog.engwsc.example.com.key

15. Import certificate into java Key Store:

  .. code-block:: bash

    keytool -importcert -noprompt \
        -keystore /etc/pki/java/cacerts \
        -storepass changeit \
        -alias graylog-self-signed \
        -file /etc/graylog/ssl/graylog.engwsc.example.com.crt

16. Set required ``password_secret`` and ``root_password_sha2``:

  .. important::

    Replace ``GRAYLOG_SECRET`` with a confidential strong password that will be used to access Graylog.

  .. code-block:: bash

    # You MUST set a secret to secure/pepper the stored
    # user passwords here. Use at least 64 characters.
    # Use: SECRET=`pwgen -N 1 -s 96`
    # to generate a random secret
    SECRET='GRAYLOG_SECRET'
    SECRET_SHA256=`echo -n "${SECRET}" | tr -d '\n' | sha256sum | cut -d" " -f1`

    sed -i "s|password_secret =.*|password_secret = ${SECRET}|g" /etc/graylog/server/server.conf
    sed -i "s|root_password_sha2 =.*|root_password_sha2 = ${SECRET_SHA256}|g" /etc/graylog/server/server.conf
    sed -i "s|#http_bind_address =.*|http_bind_address = graylog.engwsc.example.com:9000|g" /etc/graylog/server/server.conf

    sed -i "s|#http_enable_tls =.*|http_enable_tls = true|g" /etc/graylog/server/server.conf
    sed -i "s|#http_tls_cert_file =.*|http_tls_cert_file = /etc/graylog/ssl/graylog.engwsc.example.com.crt|g" /etc/graylog/server/server.conf
    sed -i "s|#http_tls_key_file =.*|http_tls_key_file = /etc/graylog/ssl/graylog.engwsc.example.com.key|g" /etc/graylog/server/server.conf

17. Configure SELinux:

  .. code-block:: bash

    setsebool -P httpd_can_network_connect 1
    semanage port -a -t http_port_t -p tcp 9000

18. Start Graylog:

  .. code-block:: bash

    systemctl daemon-reload
    systemctl enable --now graylog-server

19. Set firewalld rules:

  .. important::

    Replace the IPv4 Address and Subnet mask with the value of your network.

  .. code-block:: bash

    firewall-cmd --zone=public --add-source=192.168.1.0/24 --permanent
    firewall-cmd --zone=public --add-port=9000/tcp --permanent
    firewall-cmd --zone=public --add-port=6514/tcp --permanent
    firewall-cmd --reload

20. Log into Graylog:

.. important::

  The remainder of this guide requires using the Graylog Web Interface.

..

  Log into Graylog using user ``admin`` and password ``password_secret``.

  Graylog: https://graylog.engwsc.example.com:9000

  .. image:: ../_static/graylog/login-page.png

21. Create Input:

..

  Initial Landing Page

  .. image:: ../_static/graylog/landing-page.png

..

  System -> Inputs

  .. image:: ../_static/graylog/input-dropdown.png

..

  * Click dropdown and select "Syslog TCP"
  * Click on "Launch new input"

  .. image:: ../_static/graylog/input-page.png

..

  Fillout form:

  * Click the "Global" check box (box should be checked)
  * In the "Title" box enter: RSyslog
  * In the "Port" box enter: 6514
  * In the "No. of worker threads" box enter: 4
  * In the "TLS cert file" box enter: /etc/graylog/ssl/graylog.engwsc.example.com.crt
  * In the "TLS private key file" box enter: /etc/graylog/ssl/graylog.engwsc.example.com.key
  * Click the "Enable TLS" check box (box should be checked)
  * In the "TLS client authentication" box enter: disabled
  * Click the "TCP keepalive" check box (box should be checked)
  * Ensure the "Allow overriding date?" check box is checked
  * Click the "Save" button

  .. image:: ../_static/graylog/form1-page.png

  |br|

  .. image:: ../_static/graylog/form2-page.png

  |br|

  * If successful, input should start automatically and say "1 RUNNING"

  .. image:: ../_static/graylog/running-page.png
